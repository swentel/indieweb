<?php

/**
 * @file
 * IndieWeb Microformats2.
 */

use Drupal\Core\Url;
use Drupal\user\UserInterface;

/**
 * Implements hook_theme().
 */
function indieweb_microformat_theme() {
  return [
    'indieweb_author' => [
      'variables' => [
        'image' => NULL,
        'note' => NULL,
        'name' => NULL,
        'domain' => NULL,
      ],
    ],
    'indieweb_geofield_latlon' => [
      'variables' => [
        'lat' => 0,
        'lon' => 0,
      ],
    ],
  ];
}

/**
 * Returns the view modes on which Microformats2 should be applied to.
 *
 * @return array
 */
function indieweb_microformat_view_modes() {
  return ['full', 'indieweb_microformat'];
}

/**
 * Get content fields for microformats.
 *
 * @return array
 */
function indieweb_microformat_get_content_fields() {
  static $fields = [];
  static $loaded = FALSE;

  if (!$loaded) {
    $loaded = TRUE;
    $fields = explode("\n", \Drupal::config('indieweb_microformat.settings')->get('e_content_fields'));
  }

  return $fields;
}

/**
 * Get summary fields for microformats.
 *
 * @return array
 */
function indieweb_microformat_get_summary_fields() {
  static $fields = [];
  static $loaded = FALSE;

  if (!$loaded) {
    $loaded = TRUE;
    $fields = explode("\n", \Drupal::config('indieweb_microformat.settings')->get('p_summary'));
  }

  return $fields;
}

/**
 * Returns whether, in case of a quotation, we should move the field.
 *
 * @param $id
 * @param $type
 *
 * @return array|bool
 */
function indieweb_move_quotation_field($id, $type = 'node') {
  if ($quotation_field = drupal_static('indieweb_quotation_' . $type . '_' . $id)) {
    return $quotation_field;
  }

  return FALSE;
}

/**
 * Implements hook_preprocess_node().
 */
function indieweb_microformat_preprocess_node(&$variables) {
  if (in_array($variables['view_mode'], indieweb_microformat_view_modes())) {

    // Add h-entry or h-event.
    $h_entry = FALSE;
    if (\Drupal::config('indieweb_microformat.settings')->get('h_entry')) {
      $h_entry = TRUE;
    }
    if (($h_event = \Drupal::config('indieweb_microformat.settings')->get('h_event')) && $variables['node']->bundle() == $h_event) {
      $h_entry = FALSE;
      $variables['attributes']['class'][] = 'h-event';
    }
    if ($h_entry) {
      $variables['attributes']['class'][] = 'h-entry';
    }

    // Add post meta data.
    if (\Drupal::config('indieweb_microformat.settings')->get('post_metadata')) {
      $date = \Drupal::service('date.formatter')->format($variables['node']->getCreatedTime(), 'custom', 'c');

      $author_url = '/';
      if (indieweb_is_multi_user() && $variables['node']->getOwnerId() > 0) {
        $author_url = Url::fromRoute('entity.user.canonical', ['user' => $variables['node']->getOwnerId()], ['absolute' => TRUE])->toString();
      }

      $exclude_p_name_node_type = \Drupal::config('indieweb_microformat.settings')->get('p_name_exclude_node_type');
      if ($exclude_p_name_node_type && $variables['node']->bundle() == $exclude_p_name_node_type) {
        $metadata = '<span class="hidden">
          <a href="' . $variables['node']->toUrl('canonical', ['absolute' => TRUE])->toString() . '" class="u-url">
            <span class="dt-published">' . $date . '</span>
          </a>
          <a href="' . $author_url . '" class="u-author"></a>
        </span>
        ';
      }
      else {
        $metadata = '<span class="hidden">
          <a href="' . $variables['node']->toUrl('canonical', ['absolute' => TRUE])->toString() . '" class="u-url">
            <span class="p-name">' . $variables['node']->getTitle() . '</span>
            <span class="dt-published">' . $date . '</span>
          </a>
          <a href="' . $author_url . '" class="u-author"></a>
        </span>';
      }

      /**
       * Rdf module might have set the 'metadata' key.
       *
       * Depending whether a patch is applied, or is in core, we need to make
       * sure we don't crash and/or overwrite this key.
       *
       * @see rdf_preprocess_node().
       * @see https://www.drupal.org/project/drupal/issues/2819695
       */
      if (isset($variables['metadata'])) {
        $other = $variables['metadata'];
        $variables['metadata'] = [];
        // Patch applied, or core has been updated already.
        if (is_array($other)) {
          $variables['metadata']['other'] = $other;
          $variables['metadata']['indieweb'] = ['#markup' => $metadata];
        }
        // The metadata has been rendered.
        else {
          $variables['metadata']['#markup'] = $other;
          $variables['metadata']['indieweb'] = ['#markup' => $metadata];
        }
      }
      else {
        $variables['metadata'] = ['#markup' => $metadata];
      }
    }
    if (\Drupal::config('indieweb_microformat.settings')->get('provide_iso_datetime_variable')) {
      $date = \Drupal::service('date.formatter')->format($variables['node']->getCreatedTime(), 'custom', 'c');
      $variables['iso_datetime'] = $date;
    }

    // Special case of moving the quote and body field inside a container.
    // This currently only works on the 'body' field.
    if ($quotation_field = indieweb_move_quotation_field($variables['node']->id())) {
      if (isset($variables['content'][$quotation_field]) && isset($variables['content']['body'])) {
        $variables['content']['quotation_container'] = [
          '#type' => 'container',
          '#attributes' => ['class' => ['e-content']],
          '#weight' => $variables['content']['body']['#weight'],
        ];
        $variables['content'][$quotation_field]['#label_display'] = 'hidden';
        $variables['content']['quotation_container'][] = $variables['content'][$quotation_field];
        $variables['content']['quotation_container'][] = $variables['content']['body'];
        unset($variables['content']['body']);
        unset($variables['content'][$quotation_field]);
      }
    }
  }

}

/**
 * Implements hook_preprocess_comment().
 */
function indieweb_microformat_preprocess_comment(&$variables) {

  // Microformats for comments.
  if ($variables['elements']['#view_mode'] == 'indieweb_microformat') {

    // h-entry
    if (\Drupal::config('indieweb_microformat.settings')->get('h_entry_comment')) {
      $variables['attributes']['class'][] = 'h-entry';
    }

    // Post metadata.
    if (\Drupal::config('indieweb_microformat.settings')->get('post_metadata_comment')) {
      $date = \Drupal::service('date.formatter')
        ->format($variables['elements']['#comment']->getCreatedTime(), 'custom', 'c');

      $author_url = '/';
      if (indieweb_is_multi_user() && $variables['elements']['#comment']->getOwnerId() > 0) {
        $author_url = Url::fromRoute('entity.user.canonical', ['user' => $variables['elements']['#comment']->getOwnerId()], ['absolute' => TRUE])->toString();
      }

      $metadata = '<span class="hidden">
        <a href="' . $variables['elements']['#comment']->toUrl('canonical', ['absolute' => TRUE])->toString() . '" class="u-url">
          <span class="dt-published">' . $date . '</span>
        </a>
        <a href="' . $author_url . '" class="u-author"></a>
      </span>';

      // Attach it to content.
      $variables['content']['indieweb_medata_data']['#markup'] = $metadata;
    }

    if (\Drupal::config('indieweb_microformat.settings')->get('provide_iso_datetime_variable')) {
      $date = \Drupal::service('date.formatter')->format($variables['elements']['#comment']->getCreatedTime(), 'custom', 'c');
      $variables['iso_datetime'] = $date;
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function indieweb_microformat_preprocess_field(&$variables) {

  $view_mode = isset($variables['element']['#view_mode']) ? $variables['element']['#view_mode'] : '';
  if (!empty($view_mode) && !in_array($view_mode, indieweb_microformat_view_modes())) {
    return;
  }

  // Put e-content on textarea fields, unless the quotation static is set.
  // @see LinkMicroformatFormatter.
  if (!indieweb_move_quotation_field($variables['element']['#object']->id(), $variables['element']['#object']->getEntityTypeId()) && (($variables['field_name'] == 'body' && \Drupal::config('indieweb_microformat.settings')->get('e_content')) || in_array($variables['field_name'], indieweb_microformat_get_content_fields()))) {
    $variables['attributes']['class'][] = 'e-content';

    $exclude_p_name_node_type = \Drupal::config('indieweb_microformat.settings')->get('p_name_exclude_node_type');
    if ($variables['element']['#object']->bundle() == $exclude_p_name_node_type) {
      $variables['attributes']['class'][] = 'p-name';
    }

    // Check p-bridgy-twitter-content class. In case there is no summary field
    // on this entity or the field is empty, then add it.
    if (\Drupal::config('indieweb_microformat.settings')->get('p_bridgy_twitter_content')) {

      $add = TRUE;
      /** @var \Drupal\Core\Entity\EntityInterface $entity */
      $entity = $variables['element']['#object'];
      $summary_fields = indieweb_microformat_get_summary_fields();
      foreach ($summary_fields as $field) {
        if ($entity->hasField($field) && $entity->get($field)->getValue()) {
          $add = FALSE;
        }
      }

      if ($add) {
        $variables['attributes']['class'][] = 'p-bridgy-twitter-content';
      }
    }
  }

  // Put e-content on comment_body.
  if ($variables['field_name'] == 'comment_body' && \Drupal::config('indieweb_microformat.settings')->get('e_content_comment')) {
    $variables['attributes']['class'][] = 'e-content';
  }

  // Date range fields.
  if ($h_event = \Drupal::config('indieweb_microformat.settings')->get('h_event')) {
    if ($variables['element']['#field_type'] == 'daterange' && $variables['element']['#object']->bundle() == $h_event && !empty($variables['items'][0]['content'])) {
      foreach ($variables['items'] as $key => $item) {
        if (isset($item['content']['start_date'])) {
          $variables['items'][$key]['content']['start_date']['#attributes']['class'][] = 'dt-start';
        }
        if (isset($item['content']['end_date'])) {
          $variables['items'][$key]['content']['end_date']['#attributes']['class'][] = 'dt-end';
        }
      }
    }
  }

  // In case there's a p-summary.
  if (in_array($variables['field_name'], indieweb_microformat_get_summary_fields())) {
    $variables['attributes']['class'][] = 'p-summary';

    if (\Drupal::config('indieweb_microformat.settings')->get('p_bridgy_twitter_content')) {
      $variables['attributes']['class'][] = 'p-bridgy-twitter-content';
    }
  }

}

/**
 * Implements hook_preprocess_image_style().
 *
 * @param $variables
 */
function indieweb_microformat_preprocess_image_style(&$variables) {
  if (\Drupal::config('indieweb_microformat.settings')->get('u_photo')) {
    $variables['image']['#attributes']['class'][] = 'u-photo';
  }
}

/**
 * Implements hook_preprocess_file_audio().
 */
function indieweb_microformat_preprocess_file_audio(&$variables) {
  if (\Drupal::config('indieweb_microformat.settings')->get('u_audio')) {
    if (!empty($variables['files'])) {
      foreach ($variables['files'] as $file) {
        $file['source_attributes']->addClass('u-audio');
      }
    }
  }
}

/**
 * Implements hook_preprocess_file_entity_audio().
 */
function indieweb_microformat_preprocess_file_entity_audio(&$variables) {
  if (\Drupal::config('indieweb_microformat.settings')->get('u_audio')) {
    if (!empty($variables['files'])) {
      foreach ($variables['files'] as $file) {
        $file['source_attributes']->addClass('u-audio');
      }
    }
  }
}

/**
 * Implements hook_preprocess_file_video().
 */
function indieweb_microformat_preprocess_file_video(&$variables) {
  if (\Drupal::config('indieweb_microformat.settings')->get('u_video')) {
    if (!empty($variables['files'])) {
      foreach ($variables['files'] as $file) {
        $file['source_attributes']->addClass('u-video');
      }
    }
  }
}

/**
 * Implements hook_preprocess_file_entity_video().
 */
function indieweb_microformat_preprocess_file_entity_video(&$variables) {
  if (\Drupal::config('indieweb_microformat.settings')->get('u_video')) {
    if (!empty($variables['files'])) {
      foreach ($variables['files'] as $file) {
        $file['source_attributes']->addClass('u-video');
      }
    }
  }
}

/**
 * Implements hook_ds_pre_render_alter().
 */
function indieweb_microformat_ds_pre_render_alter(array &$layout_render_array, array $context, array &$variables) {
  if ($context['entity_type'] == 'node' && \Drupal::config('indieweb_microformat.settings')->get('ds_node_support')) {
    $variables['view_mode'] = $context['view_mode'];
    indieweb_microformat_preprocess_node($variables);
  }
}

/**
 * Implements hook_indieweb_settings_user_override().
 */
function indieweb_microformat_indieweb_settings_user_override(UserInterface $user) {
  $return = [];

  // Override blocked domains for webmentions.
  if ($user->hasPermission('set author note')) {
    $return['note'] = [
      'module' => 'indieweb_microformat',
      'form_element' => [
        '#title' => t('Note'),
        '#type' => 'textarea',
        '#default_value' => \Drupal::service('user.data')->get('indieweb_microformat', $user->id(), 'note'),
        '#description' => t('Enter information about yourself.'),
      ]
    ];
  }

  return $return;
}
